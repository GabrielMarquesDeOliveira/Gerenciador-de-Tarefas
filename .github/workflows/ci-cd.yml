name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tarefas_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/tarefas_test
          JWT_SECRET: test_secret

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          CI=true npm test

      - name: Generate test coverage
        run: |
          cd backend
          npm run test:coverage

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"

      - name: Install ESLint
        run: |
          npm install -g eslint

      - name: Lint backend
        run: |
          cd backend
          npm ci
          eslint .

      - name: Lint frontend
        run: |
          cd frontend
          npm ci
          eslint .

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Build backend
        run: |
          cd backend
          npm ci
          npm run build --if-present

      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Generate documentation
        run: |
          cd backend
          npm run docs
